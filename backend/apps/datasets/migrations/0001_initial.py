# Generated by Django 5.2.6 on 2025-09-21 14:41

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'dataset_tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='datasets.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'dataset_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='datasets/')),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('file_type', models.CharField(max_length=50)),
                ('file_hash', models.CharField(max_length=64, unique=True)),
                ('ipfs_hash', models.CharField(blank=True, max_length=100)),
                ('ipfs_url', models.URLField(blank=True)),
                ('price', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0E-8'))])),
                ('license_type', models.CharField(choices=[('cc0', 'CC0 - Public Domain'), ('cc_by', 'CC BY - Attribution'), ('cc_by_sa', 'CC BY-SA - Attribution-ShareAlike'), ('cc_by_nc', 'CC BY-NC - Attribution-NonCommercial'), ('mit', 'MIT License'), ('apache', 'Apache License 2.0'), ('custom', 'Custom License')], default='cc_by', max_length=20)),
                ('license_text', models.TextField(blank=True)),
                ('sample_data', models.JSONField(blank=True, default=dict)),
                ('schema_info', models.JSONField(blank=True, default=dict)),
                ('statistics', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('suspended', 'Suspended')], default='draft', max_length=20)),
                ('rejection_reason', models.TextField(blank=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('rating_average', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('keywords', models.TextField(blank=True, help_text='Comma-separated keywords for search')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datasets', to='datasets.category')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='datasets', to='datasets.tag')),
            ],
            options={
                'verbose_name': 'Dataset',
                'verbose_name_plural': 'Datasets',
                'db_table': 'datasets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DatasetAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('view', 'View'), ('download', 'Download'), ('preview', 'Preview')], max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='datasets.dataset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dataset Access',
                'verbose_name_plural': 'Dataset Accesses',
                'db_table': 'dataset_access_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['dataset', 'access_type', 'timestamp'], name='dataset_acc_dataset_4b842e_idx'), models.Index(fields=['user', 'timestamp'], name='dataset_acc_user_id_116acc_idx')],
            },
        ),
        migrations.CreateModel(
            name='DatasetCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('datasets', models.ManyToManyField(blank=True, related_name='collections', to='datasets.dataset')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dataset Collection',
                'verbose_name_plural': 'Dataset Collections',
                'db_table': 'dataset_collections',
                'ordering': ['-updated_at'],
                'unique_together': {('owner', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='DatasetReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('comment', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='datasets.dataset')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dataset Review',
                'verbose_name_plural': 'Dataset Reviews',
                'db_table': 'dataset_reviews',
                'ordering': ['-created_at'],
                'unique_together': {('dataset', 'reviewer')},
            },
        ),
        migrations.CreateModel(
            name='DatasetVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=20)),
                ('file', models.FileField(upload_to='dataset_versions/')),
                ('file_size', models.BigIntegerField()),
                ('file_hash', models.CharField(max_length=64)),
                ('ipfs_hash', models.CharField(blank=True, max_length=100)),
                ('changelog', models.TextField(blank=True)),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='datasets.dataset')),
            ],
            options={
                'verbose_name': 'Dataset Version',
                'verbose_name_plural': 'Dataset Versions',
                'db_table': 'dataset_versions',
                'ordering': ['-created_at'],
                'unique_together': {('dataset', 'version')},
            },
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['status', 'published_at'], name='datasets_status_160a7c_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['category', 'status'], name='datasets_categor_f6f982_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['owner', 'status'], name='datasets_owner_i_b7abee_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['file_hash'], name='datasets_file_ha_6f0c48_idx'),
        ),
    ]
