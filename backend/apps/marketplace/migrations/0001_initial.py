# Generated by Django 5.2.6 on 2025-09-21 14:41

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('datasets', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], default='percentage', max_length=20)),
                ('percentage', models.DecimalField(decimal_places=2, default=Decimal('2.50'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fixed_amount', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=20)),
                ('currency', models.CharField(default='NRC', max_length=10)),
                ('min_transaction_amount', models.DecimalField(decimal_places=8, default=Decimal('0E-8'), max_digits=20)),
                ('max_transaction_amount', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('effective_from', models.DateTimeField()),
                ('effective_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Platform Fee',
                'verbose_name_plural': 'Platform Fees',
                'db_table': 'marketplace_platform_fees',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0E-8'))])),
                ('currency', models.CharField(default='NRC', max_length=10)),
                ('payment_method', models.CharField(choices=[('crypto', 'Cryptocurrency'), ('credit_card', 'Credit Card'), ('paypal', 'PayPal'), ('bank_transfer', 'Bank Transfer')], default='crypto', max_length=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=66)),
                ('payment_address', models.CharField(blank=True, max_length=42)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('failure_reason', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='datasets.dataset')),
            ],
            options={
                'verbose_name': 'Purchase',
                'verbose_name_plural': 'Purchases',
                'db_table': 'marketplace_purchases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gross_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('platform_fee', models.DecimalField(decimal_places=8, max_digits=20)),
                ('net_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('currency', models.CharField(default='NRC', max_length=10)),
                ('recipient_address', models.CharField(max_length=42)),
                ('transaction_hash', models.CharField(blank=True, max_length=66)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('failure_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to=settings.AUTH_USER_MODEL)),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payout', to='marketplace.purchase')),
            ],
            options={
                'verbose_name': 'Payout',
                'verbose_name_plural': 'Payouts',
                'db_table': 'marketplace_payouts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Escrow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('currency', models.CharField(default='NRC', max_length=10)),
                ('escrow_address', models.CharField(max_length=42)),
                ('status', models.CharField(choices=[('created', 'Created'), ('funded', 'Funded'), ('released', 'Released'), ('refunded', 'Refunded'), ('disputed', 'Disputed')], default='created', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('funded_at', models.DateTimeField(blank=True, null=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escrow', to='marketplace.purchase')),
            ],
            options={
                'verbose_name': 'Escrow',
                'verbose_name_plural': 'Escrows',
                'db_table': 'marketplace_escrows',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('defective', 'Defective Dataset'), ('not_as_described', 'Not as Described'), ('duplicate', 'Duplicate Purchase'), ('technical_issue', 'Technical Issue'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('currency', models.CharField(default='NRC', max_length=10)),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('processed', 'Processed')], default='requested', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('transaction_hash', models.CharField(blank=True, max_length=66)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='refund', to='marketplace.purchase')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Refund',
                'verbose_name_plural': 'Refunds',
                'db_table': 'marketplace_refunds',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Dataset Purchase'), ('payout', 'Seller Payout'), ('refund', 'Refund'), ('fee', 'Platform Fee'), ('reward', 'Reward')], max_length=20)),
                ('transaction_hash', models.CharField(max_length=66, unique=True)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('block_hash', models.CharField(blank=True, max_length=66)),
                ('gas_used', models.BigIntegerField(blank=True, null=True)),
                ('gas_price', models.BigIntegerField(blank=True, null=True)),
                ('from_address', models.CharField(max_length=42)),
                ('to_address', models.CharField(max_length=42)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=30)),
                ('currency', models.CharField(default='NRC', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('confirmations', models.PositiveIntegerField(default=0)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='marketplace.purchase')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'marketplace_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['buyer', 'status'], name='marketplace_buyer_i_0d8725_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['dataset', 'status'], name='marketplace_dataset_6e3a9b_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['transaction_hash'], name='marketplace_transac_fbe14e_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['status', 'created_at'], name='marketplace_status_ef2a4b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_hash'], name='marketplace_transac_07fcd8_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['from_address'], name='marketplace_from_ad_cb974d_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['to_address'], name='marketplace_to_addr_439923_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status', 'created_at'], name='marketplace_status_e0578b_idx'),
        ),
    ]
