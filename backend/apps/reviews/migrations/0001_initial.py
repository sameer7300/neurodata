# Generated by Django 5.2.6 on 2025-09-23 10:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('datasets', '0003_add_privacy_field'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('filter_type', models.CharField(choices=[('profanity', 'Profanity Filter'), ('spam', 'Spam Detection'), ('sentiment', 'Negative Sentiment'), ('length', 'Length Validation'), ('keyword', 'Keyword Filter')], max_length=20)),
                ('pattern', models.TextField(help_text='Regex pattern or keywords (comma-separated)')),
                ('is_active', models.BooleanField(default=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('action', models.CharField(choices=[('flag', 'Flag for Review'), ('auto_reject', 'Auto Reject'), ('require_approval', 'Require Approval')], default='flag', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Review Filter',
                'verbose_name_plural': 'Review Filters',
                'db_table': 'review_filters',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_type', models.CharField(choices=[('dataset', 'Dataset Review'), ('seller', 'Seller Review'), ('platform', 'Platform Review')], default='dataset', max_length=20)),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(max_length=200)),
                ('comment', models.TextField()),
                ('is_verified_purchase', models.BooleanField(default=False)),
                ('purchase_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('flagged', 'Flagged'), ('auto_approved', 'Auto Approved')], default='pending', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('filter_score', models.FloatField(default=0.0, help_text='Automatic filter confidence score')),
                ('flagged_reasons', models.JSONField(blank=True, default=list)),
                ('auto_moderation_notes', models.TextField(blank=True)),
                ('moderation_notes', models.TextField(blank=True)),
                ('moderated_at', models.DateTimeField(blank=True, null=True)),
                ('helpful_count', models.PositiveIntegerField(default=0)),
                ('report_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dataset_reviews', to='datasets.dataset')),
                ('moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewed_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'db_table': 'reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpful',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_helpful', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to='reviews.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'review_helpful',
            },
        ),
        migrations.CreateModel(
            name='ReviewModeration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=20)),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_history', to='reviews.review')),
            ],
            options={
                'db_table': 'review_moderation_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('inappropriate', 'Inappropriate Content'), ('fake', 'Fake Review'), ('offensive', 'Offensive Language'), ('irrelevant', 'Irrelevant Content'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='reviews.review')),
            ],
            options={
                'db_table': 'review_reports',
            },
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['status', 'created_at'], name='reviews_status_422c9e_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['dataset', 'status'], name='reviews_dataset_6f9358_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating', 'status'], name='reviews_rating_0d3278_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('reviewer', 'dataset'), ('reviewer', 'reviewed_user')},
        ),
        migrations.AlterUniqueTogether(
            name='reviewhelpful',
            unique_together={('review', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='reviewreport',
            unique_together={('review', 'reporter')},
        ),
    ]
